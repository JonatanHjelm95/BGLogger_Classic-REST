{"version":3,"sources":["apiFacade.js","Components/ChartInterface.js","Components/TimelineChart.js","Components/Contact.js","Components/Loader.js","Components/DropZone.js","Components/Analyze.js","Navigation.js","App.js","serviceWorker.js","index.js","../node_modules/jsdom/lib/jsdom sync"],"names":["facade","startAnalyzation","_callee","playername","data","formData","options","res","json","regenerator_default","a","wrap","_context","prev","next","FormData","append","_this","makeOptions","fetch","sent","ok","status","fullError","abrupt","stop","method","body","opts","headers","Content-type","ChartInterface","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","division","labels","Y","datasets","label","chartname","X","mounted","ts","Date","getTime","start","setMonth","getMonth","prevProps","timestamp","time","parseInt","d","h","addZero","getUTCHours","m","getUTCMinutes","getUTCDate","getUTCMonth","getUTCFullYear","i","_this2","label1","sort","showOrders","map","item","convertTimestampToDatetime","type","backgroundColor","buys","sells","cryptoName","fill","pointRadius","borderColor","borderWidth","pointBackgroundColor","JSONdata","parseFloat","toFixed","setState","loading","evt","interval","target","value","getChartData","windowWidth","window","innerWidth","width","react_default","createElement","className","react_chartjs_2_es","height","Component","TimelineChart","endOfCombat","startOfCombat","ic","timeData","createTimeline","console","log","obj","key","size","hasOwnProperty","end","getObjSize","createTimeArray","createTimeData","arr","inCombat","push","length","limit","nextProps","ooc","scales","yAxes","ticks","beginAtZero","xAxes","display","Contact","React","addMessage","_ref","sender","text","concat","addRow","_ref2","JSON","parse","stream","list","unshift","finish","initiator","socket","cettia","open","addSystemMessage","on","message","addListMessage","delay","once","setInterval","send","now","_this3","plots","plot","createPlot","_this4","_this5","names","Name","toString","split","column","Components_ChartInterface","Components_TimelineChart","_this6","undefined","includes","createActionAnalysis","createDamageAnalysis","createDPSAnalysis","createDPSAnalysisTable","Loader","DropZone","validFile","processed","encodedData","combatLog","units","selectedUnit","analyze","bind","assertThisInitialized","finishedAnalyzing","file","filename","path","processFile","reader","FileReader","onload","asyncToGenerator","mark","binaryStr","unitNames","result","getAllUnitsFromFile","createUnitSelectItems","readAsText","fileSplit","lineSplit","j","filter_list","removeDups","l","filter","x","replace","unique","forEach","keys","player","stringify","persist","Components_Loader","es","onDrop","validateFile","getRootProps","getInputProps","onChange","changeUnit","disabled","selected","onClick","Components_Contact","Analyze","Components_DropZone","Navigation","react_router_dom","to","exact","react_router","component","App","src_Navigation","Boolean","location","hostname","match","ReactDOM","render","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","webpackEmptyContext","req","e","Error","code","resolve","module","exports","id"],"mappings":"2PAmCeA,EAFA,gEAbXC,uDAAmB,SAAAC,EAAOC,EAAYC,GAAnB,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACXT,EAAW,IAAIU,UACVC,OAAO,OAAOZ,GACjBE,EAAUW,EAAKC,YAAY,OAASb,GAH3BO,EAAAE,KAAA,EAIGK,MAAM,sBAAsBhB,EAAYG,GAJ3C,cAITC,EAJSK,EAAAQ,KAAAR,EAAAE,KAAA,EAKIP,EAAIC,OALR,UAKTA,EALSI,EAAAQ,KAMVb,EAAIc,GANM,CAAAT,EAAAE,KAAA,cAOL,CAAEQ,OAAQf,EAAIe,OAAQC,UAAWf,GAP5B,eAAAI,EAAAY,OAAA,SASRhB,GATQ,yBAAAI,EAAAa,SAAAvB,sHAbPwB,EAAQC,GAChB,IAAIC,EAAO,CACPF,OAAQA,EACRG,QAAS,CACLC,eAAgB,wBAMxB,OAHIH,IACAC,EAAKD,KAAOA,GAETC,uCCyJAG,cApKX,SAAAA,EAAYC,GAAO,IAAAf,EAAA,OAAAgB,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACfd,EAAAgB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMH,KACDO,MAAQ,CACTC,SAAUvB,EAAKe,MAAMQ,SACrBpC,KAAM,CACFqC,OAAQxB,EAAKe,MAAMU,EACnBC,SAAU,CAAC,CACPC,MAAO3B,EAAKe,MAAMa,UAClBzC,KAAMa,EAAKe,MAAMc,MARd7B,mIA+CfkB,KAAKY,SAAU,gDAKf,IAAIC,GAAK,IAAIC,MAAOC,UAChBC,EAAQ,IAAIF,KAAKD,GAErB,OADAG,EAAQA,EAAMC,SAASD,EAAME,WAAa,8CAI3BC,uDAMQC,GACvB,IAAIC,EAAOC,SAASF,GAChBG,EAAI,IAAIT,KAAKO,GACbG,EAAIxB,KAAKyB,QAAQF,EAAEG,eACnBC,EAAI3B,KAAKyB,QAAQF,EAAEK,iBACvB,OAAOL,EAAEM,aAAe,KAAON,EAAEO,cAAgB,GAAK,IAAMP,EAAEQ,iBAAmB,IAAMP,EAAI,IAAMG,EAAI,uCAEjGK,GAIJ,OAHIA,EAAI,KACJA,EAAI,IAAMA,GAEPA,yCAGI,IAEP/D,EAFOgE,EAAAjC,KACPM,EAASN,KAAKI,MAAM8B,OAExB5B,EAASA,EAAO6B,OAEZlE,EADA+B,KAAKI,MAAMgC,WACJ,CACH9B,OAAQA,EAAO+B,IAAI,SAAAC,GAAI,OAAIL,EAAKM,2BAA2BjB,SAASgB,MACpE9B,SAAU,CAAC,CACPgC,KAAM,SACN/B,MAAO,OACPgC,gBAAiB,QACjBxE,KAAM+B,KAAKI,MAAMsC,MAErB,CACIF,KAAM,SACN/B,MAAO,QACPgC,gBAAiB,MACjBxE,KAAM+B,KAAKI,MAAMuC,OAGrB,CACIlC,MAAOT,KAAKH,MAAM+C,WAClBC,KAAM,OACNC,YAAa,EACbC,YAAa,UACbC,YAAa,EACbC,qBAAsB,QACtBhF,KAAM+B,KAAKI,MAAM8C,SAASb,IAAI,SAAAC,GAAI,OAAIa,WAAWb,EAAK,IAAIc,QAAQ,QAOnE,CACH9C,OAAQA,EAAO+B,IAAI,SAAAC,GAAI,OAAIL,EAAKM,2BAA2BjB,SAASgB,MACpE9B,SAAU,CACN,CACIC,MAAOT,KAAKH,MAAM+C,WAClBC,KAAM,OACNC,YAAa,EACbC,YAAa,UACbC,YAAa,EACbC,qBAAsB,QACtBhF,KAAM+B,KAAKI,MAAM8C,SAASb,IAAI,SAAAC,GAAI,OAAIa,WAAWb,EAAK,IAAIc,QAAQ,QAOlFpD,KAAKqD,SAAS,CACVpF,KAAMA,EACNqF,SAAS,2CAIFC,GACXvD,KAAKqD,SAAS,CACVG,SAAUD,EAAIE,OAAOC,QAEzB1D,KAAK2D,gDAIL,IAAMC,EAAcC,OAAOC,WAAW,GAChCC,EAAQzC,SAASsC,EAAY5D,KAAKI,MAAMC,UAC9C,OACI2D,EAAAzF,EAAA0F,cAAA,OAAKC,UAAU,mBAGCF,EAAAzF,EAAA0F,cAACE,EAAA,EAAD,CAEIC,OAAQ,IACRL,MAAOA,EACP5F,QAAS,GAETF,KAAM+B,KAAKI,MAAMnC,eA5JpBoG,aCgJdC,cA/IX,SAAAA,EAAYzE,GAAO,IAAAf,EAAA,OAAAgB,OAAAC,EAAA,EAAAD,CAAAE,KAAAsE,IACfxF,EAAAgB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwE,GAAAnE,KAAAH,KAAMH,KACDO,MAAQ,CACTmE,YAAazF,EAAKe,MAAM5B,KAAK,GAAGA,KAChCuG,cAAe1F,EAAKe,MAAM5B,KAAK,GAAGA,KAElCwG,GAAI,GACJC,SAAU5F,EAAKe,MAAM5B,KACrBA,KAAM,CACFqC,OAAQ,CAAC,GACTE,SAAU,CAAC,CACPC,MAAO,WACPxC,KAAM,OAIlBa,EAAK6F,iBAhBU7F,mFAoBf8F,QAAQC,IAAI7E,KAAKI,MAAMsE,6CAGhBI,GACP,IAAcC,EAAVC,EAAO,EACX,IAAKD,KAAOD,EACJA,EAAIG,eAAeF,IAAMC,IAEjC,OAAOA,2CAGP,IAAIE,EAAMlF,KAAKI,MAAMmE,YAAYvE,KAAKmF,WAAWnF,KAAKI,MAAMmE,aAAe,GAC3EvE,KAAKqD,SAAS,CACVpF,KAAM,CACFqC,OAAQN,KAAKoF,gBAAgBF,GAC7B1E,SAAU,CAAC,CACPC,MAAO,WACPxC,KAAM+B,KAAKqF,eAAeH,+CAM3BA,GACDlF,KAAKI,MAAMmE,YACZvE,KAAKI,MAAMoE,cAGpB,IAJA,IAEIc,EAAM,GACNC,GAAW,EACNvD,EAAI,EAAGA,EAAIkD,EAAKlD,IAAK,CAC1B,KAAa,EAAOhC,KAAKmF,WAAWnF,KAAKI,MAAMmE,aAAcvC,IACpDuD,IAEGA,EADAvD,GAAKhC,KAAKI,MAAMoE,cAFf,IAEmCxC,EAAIhC,KAAKI,MAAMmE,YAFlD,IAQTgB,EAEAD,EAAIE,KAAK,GAGRF,EAAIE,KAAK,GAGlB,OADAZ,QAAQC,IAAIS,EAAIG,OAAQH,GACjBA,0CAGKI,GAEZ,IADA,IAAIJ,EAAM,GACDtD,EAAI,EAAGA,EAAI0D,EAAO1D,IACvBsD,EAAIE,KAAKxD,GAEb,OAAOsD,oDAGeK,GAClB3F,KAAKI,MAAMwF,KAAOD,EAAUC,KAC5B5F,KAAKqD,SAAS,CACVuC,IAAKD,EAAUC,MAGnB5F,KAAKI,MAAMqE,IAAMkB,EAAUlB,IAC3BzE,KAAKqD,SAAS,CACVoB,GAAIkB,EAAUlB,KAGlBzE,KAAKI,MAAMsE,UAAYiB,EAAU1H,MACjC+B,KAAKqD,SAAS,CACVqB,SAAUiB,EAAU1H,sDAM5B+B,KAAKY,SAAU,gDAKf,IAAIC,GAAK,IAAIC,MAAOC,UAChBC,EAAQ,IAAIF,KAAKD,GAErB,OADAG,EAAQA,EAAMC,SAASD,EAAME,WAAa,8CAI3BC,qCAKf,OACI6C,EAAAzF,EAAA0F,cAAA,OAAKC,UAAU,mBAGXF,EAAAzF,EAAA0F,cAACE,EAAA,EAAD,CAEIC,OAAQ,GACRL,MAAOF,OAAOC,WAAa,GAC3B3F,QAAS,CACL0H,OAAQ,CACJC,MAAO,CAAC,CACJC,MAAO,CACHC,aAAa,KAGrBC,MAAO,CAAC,CACJF,MAAO,CACHG,SAAS,OAMzBjI,KAAM+B,KAAKI,MAAMnC,eAvIToG,aC2Mb8B,GA1MGC,IAAM/B,sBAepB,SAAA8B,EAAYtG,GAAO,IAAAf,EAAA,OAAAgB,OAAAC,EAAA,EAAAD,CAAAE,KAAAmG,IACfrH,EAAAgB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqG,GAAAhG,KAAAH,KAAMH,KAuBVwG,WAAa,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,OAAQC,EAAXF,EAAWE,KAAX,OAAsB5B,QAAQC,IAAR,GAAA4B,OAAeF,EAAf,WAAAE,OAA+BD,KAxB/C1H,EA0BnB4H,OAAS,SAAAC,GAAsB,IAAnBJ,EAAmBI,EAAnBJ,OAAQC,EAAWG,EAAXH,KACZ1B,EAAM,CAAEyB,OAAQA,EAAQC,KAAMI,KAAKC,MAAML,IAC1B1H,EAAKsB,MAAhB0G,OACRlC,QAAQC,IAAIC,EAAI0B,MAChB,IAAIO,EAAOjI,EAAKsB,MAAM0G,OACtBC,EAAKC,QAAQlC,GACbhG,EAAKuE,SAAS,CAAEyD,OAAQC,IACxBnC,QAAQC,IAAI/F,EAAKsB,MAAM0G,QACvBhI,EAAKe,MAAMoH,UAhCXnI,EAAKsB,MAAQ,CACT6G,OAAQnI,EAAKe,MAAMoH,OACnBH,OAAQhI,EAAKe,MAAMiH,OACnBI,UAAWpI,EAAKe,MAAMqH,WALXpI,yFAWO6G,GAClBA,EAAUuB,WAAalH,KAAKI,MAAM8G,WAClClH,KAAKqD,SAAS,CACV6D,UAAWvB,EAAUuB,YAGzBvB,EAAUmB,QAAU9G,KAAKI,MAAM0G,QAC/B9G,KAAKqD,SAAS,CACVyD,OAAQnB,EAAUmB,qDAkBV,IAAA7E,EAAAjC,KAIhBA,KAAKmH,OAASC,IAAOC,KAHd,yDAIP,IAAMC,EAAmB,SAAAd,GAAI,OAAIvE,EAAKoE,WAAW,CAAEE,OAAQ,SAAUC,UAErExG,KAAKmH,OAAOI,GAAG,UAAW,SAAAC,GAAO,OADV,SAAAA,GAAO,OAAIvF,EAAKyE,OAAOc,GACTC,CAAeD,KACpDxH,KAAKmH,OAAOI,GAAG,aAAc,kBAAMD,EAAiB,qCACpDtH,KAAKmH,OAAOI,GAAG,OAAQ,kBAAMD,EAAiB,0CAC9CtH,KAAKmH,OAAOI,GAAG,QAAS,kBAAMD,EAAiB,0EAC/CtH,KAAKmH,OAAOI,GAAG,UAAW,SAACG,GAAD,OAAWJ,EAAgB,mCAAAb,OAAoCiB,EAApC,UACrD1H,KAAKmH,OAAOQ,KAAK,OAAQ,kBAAMC,YAAY,kBAAM3F,EAAKkF,OAAOU,KAAK,UAAW,CAAErB,KAAI,eAAAC,OAAiB3F,KAAKgH,UAAY,oDAGpGxF,GAAM,IAAAyF,EAAA/H,KAEnBgI,GADO1F,EAAKrE,KACJqE,EAAK0F,OAEjB,GADApD,QAAQC,IAAImD,GACRhI,KAAKmF,WAAW6C,GAAS,EACzB,OAAQhE,EAAAzF,EAAA0F,cAAA,WACJD,EAAAzF,EAAA0F,cAAA,UACK+D,EAAM3F,IAAI,SAAA4F,GAAI,OAAIjE,EAAAzF,EAAA0F,cAAA,UAAK8D,EAAKG,WAAWD,EAAM,qDAMzC3F,GAAM,IAAA6F,EAAAnI,KAEnBgI,GADO1F,EAAKrE,KACJqE,EAAK0F,OACjB,GAAIhI,KAAKmF,WAAW6C,GAAS,EACzB,OAAQhE,EAAAzF,EAAA0F,cAAA,WACJD,EAAAzF,EAAA0F,cAAA,UACK+D,EAAM3F,IAAI,SAAA4F,GAAI,OAAIjE,EAAAzF,EAAA0F,cAAA,UAAKkE,EAAKD,WAAWD,EAAM,kDAK5C3F,GAAM,IAAA8F,EAAApI,KAEhBgI,GADO1F,EAAKrE,KACJqE,EAAK0F,OACjB,GAAIhI,KAAKmF,WAAW6C,GAAS,EACzB,OAAQhE,EAAAzF,EAAA0F,cAAA,WACJD,EAAAzF,EAAA0F,cAAA,UACK+D,EAAM3F,IAAI,SAAA4F,GAAI,OAAIjE,EAAAzF,EAAA0F,cAAA,UAAKmE,EAAKF,WAAWD,EAAM,uDAKvC3F,GACnB,IAAIrE,EAAOqE,EAAKrE,KACZoK,EAAQ/F,EAAKgG,KAAKC,WAAWC,MAAM,KACvC,OACIxE,EAAAzF,EAAA0F,cAAA,UAAID,EAAAzF,EAAA0F,cAAA,UAAID,EAAAzF,EAAA0F,cAAA,UAAKoE,EAAM,IAAQrE,EAAAzF,EAAA0F,cAAA,UAAKhG,EAAK,KACjC+F,EAAAzF,EAAA0F,cAAA,UAAID,EAAAzF,EAAA0F,cAAA,UAAKoE,EAAM,IAAQrE,EAAAzF,EAAA0F,cAAA,UAAKhG,EAAK,KACjC+F,EAAAzF,EAAA0F,cAAA,UAAID,EAAAzF,EAAA0F,cAAA,UAAKoE,EAAM,IAAQrE,EAAAzF,EAAA0F,cAAA,UAAKhG,EAAK,yCAKlC6G,GACP,IAAcC,EAAVC,EAAO,EACX,IAAKD,KAAOD,EACJA,EAAIG,eAAeF,IAAMC,IAEjC,OAAOA,yCAGIyD,GACXA,EAAOpG,yCAIA4F,EAAM5H,GACb,OAAO2D,EAAAzF,EAAA0F,cAACyE,EAAD,CAAgBhI,UAAWuH,EAAKK,KAAM3H,EAAGsH,EAAK1H,EAAGA,EAAG0H,EAAKtH,EAAGN,SAAUA,2CAGlEpC,GACX,OAAO+F,EAAAzF,EAAA0F,cAAC0E,EAAD,CAAe1K,KAAMA,qCAGvB,IAAA2K,EAAA5I,KACL,OACIgE,EAAAzF,EAAA0F,cAAA,WACID,EAAAzF,EAAA0F,cAAA,SAAOC,UAAU,MACbF,EAAAzF,EAAA0F,cAAA,aACID,EAAAzF,EAAA0F,cAAA,UAAKjE,KAAKI,MAAM8G,YAEpBlD,EAAAzF,EAAA0F,cAAA,aACKjE,KAAKI,MAAM0G,OAAOzE,IAAI,SAAAC,QACAuG,IAAhBvG,EAAKiE,QAAwBjE,EAAKiE,OAAOgC,WAAWO,SAAS,gCAC5DlE,QAAQC,IAAIvC,EAAKkE,QAUxBxG,KAAKI,MAAM0G,OAAOzE,IAAI,SAAAC,GACnB,QAAoBuG,IAAhBvG,EAAKiE,QAAwBjE,EAAKiE,OAAOgC,WAAWO,SAAS,2BAE7D,OADAlE,QAAQC,IAAIvC,EAAKkE,MAEbxC,EAAAzF,EAAA0F,cAAA,WACID,EAAAzF,EAAA0F,cAAA,UAAID,EAAAzF,EAAA0F,cAAA,8BACJD,EAAAzF,EAAA0F,cAAA,UAAID,EAAAzF,EAAA0F,cAAA,UAAK2E,EAAKG,qBAAqBzG,EAAKkE,WAMvDxG,KAAKI,MAAM0G,OAAOzE,IAAI,SAAAC,GACnB,QAAoBuG,IAAhBvG,EAAKiE,QAAwBjE,EAAKiE,OAAOgC,WAAWO,SAAS,2BAE7D,OADAlE,QAAQC,IAAIvC,EAAKkE,MAEbxC,EAAAzF,EAAA0F,cAAA,WACID,EAAAzF,EAAA0F,cAAA,UAAID,EAAAzF,EAAA0F,cAAA,8BACJD,EAAAzF,EAAA0F,cAAA,UAAID,EAAAzF,EAAA0F,cAAA,UAAK2E,EAAKI,qBAAqB1G,EAAKkE,WAMvDxG,KAAKI,MAAM0G,OAAOzE,IAAI,SAAAC,GACnB,QAAoBuG,IAAhBvG,EAAKiE,QAAwBjE,EAAKiE,OAAOgC,WAAWO,SAAS,8BAE7D,OADAlE,QAAQC,IAAIvC,EAAKkE,KAAKvI,MAElB+F,EAAAzF,EAAA0F,cAAA,WACID,EAAAzF,EAAA0F,cAAA,UAAID,EAAAzF,EAAA0F,cAAA,0BAAqBD,EAAAzF,EAAA0F,cAAA,YACzBD,EAAAzF,EAAA0F,cAAA,UAAID,EAAAzF,EAAA0F,cAAA,UAAK2E,EAAKK,kBAAkB3G,EAAKkE,OAAWxC,EAAAzF,EAAA0F,cAAA,UAAK2E,EAAKM,uBAAuB5G,EAAKkE,KAAKvI,KAAK,mBA1KlHmI,IAAM/B,YCXb8E,EANA,WACX,OACInF,EAAAzF,EAAA0F,cAAA,OAAKC,UAAU,YC4JRkF,cAzJX,SAAAA,EAAYvJ,GAAO,IAAAf,EAAA,OAAAgB,OAAAC,EAAA,EAAAD,CAAAE,KAAAoJ,IACftK,EAAAgB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsJ,GAAAjJ,KAAAH,KAAMH,KACDO,MAAQ,CACTiJ,WAAW,EACXC,WAAW,EACXhG,SAAS,EACTiG,YAAa,GACbC,UAAW,GACXC,MAAO,GACPC,aAAc,GACd5C,OAAQ,IAGZhI,EAAK6K,QAAU7K,EAAK6K,QAAQC,KAAb9J,OAAA+J,EAAA,EAAA/J,QAAA+J,EAAA,EAAA/J,CAAAhB,KACfA,EAAKgL,kBAAoBhL,EAAKgL,kBAAkBF,KAAvB9J,OAAA+J,EAAA,EAAA/J,QAAA+J,EAAA,EAAA/J,CAAAhB,KAdVA,4EAiBNiL,GACT,IAAMC,EAAWD,EAAK,GAAGE,KACzBrF,QAAQC,IAAIkF,EAAK,GAAGE,MACH,qBAAbD,EACAhK,KAAKqD,SAAS,CACViG,WAAW,EACXD,UAAwB,qBAAbW,IAIfpF,QAAQC,IAAI,gBAEhB7E,KAAKkK,YAAYH,EAAK,gFAGRA,gFACV/J,KAAKI,MAAMiJ,aAELc,EAAS,IAAIC,YACZC,OAAPvK,OAAAwK,EAAA,EAAAxK,CAAAxB,EAAAC,EAAAgM,KAAgB,SAAAxM,IAAA,IAAAyM,EAAAhB,EAAAiB,EAAA,OAAAnM,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACN6L,EAAYL,EAAOO,OAErBlB,EAAYgB,EAAUhC,MAAM,MAC5BiC,EAAYxI,EAAK0I,oBAAoBH,GACzCvI,EAAKoB,SAAS,CAEVmG,UAAWA,EACXC,MAAOgB,EACPnB,WAAW,IAEfrH,EAAK2I,wBAXO,wBAAAnM,EAAAa,SAAAvB,MAahBoM,EAAOU,WAAWd,mJAINA,GAIhB,IAFA,IAAIN,EAAQ,GACRqB,EAAYf,EAAKvB,MAAM,MAClBxG,EAAI,EAAGA,EAAI8I,EAAUrF,OAAQzD,IAElC,IADA,IAAI+I,EAAYD,EAAU9I,GAAGwG,MAAM,KAC1BwC,EAAI,EAAGA,EAAID,EAAUtF,OAAQuF,IAC9BD,EAAUC,GAAGlC,SAAS,WAClBiC,EAAUC,EAAI,GAAGlC,UACjBW,EAAMjE,KAAKuF,EAAUC,EAAI,IAKzC,OAAOhL,KAAKiL,YAAYjL,KAAKkL,WAAWzB,wCAGhC0B,GACR,OAAOA,EAAEC,OAAO,SAAAC,GAAC,OAAIA,EAAEvC,SAAS,uDAIhC,IAAIW,EAAQzJ,KAAKI,MAAMqJ,MAAMpH,IAAI,SAAAC,GAC7B,OAAQ0B,EAAAzF,EAAA0F,cAAA,UAAQc,IAAKzC,EAAKgJ,QAAQ,IAAM,IAAK5H,MAAOpB,EAAKgJ,QAAQ,IAAM,KAAMhJ,EAAKgJ,QAAQ,IAAM,IAAIA,QAAQ,IAAM,OAEtHtL,KAAKqD,SAAS,CACVoG,MAAOA,uCAIJpB,GACP,IAAIkD,EAAS,GAMb,OALAlD,EAAMmD,QAAQ,SAAUxJ,GACfuJ,EAAOvJ,KACRuJ,EAAOvJ,IAAK,KAGblC,OAAO2L,KAAKF,2EAGTG,EAAQzN,0EAClB+B,KAAKqD,SAAS,CACVC,SAAS,EACTwD,OAAQ,cAENjJ,EAAOC,iBAAiB4N,EAAQ9E,KAAKC,MAAMD,KAAK+E,UAAU1N,6IAGzDsF,GACPA,EAAIqI,UACJ5L,KAAKqD,SAAS,CACVqG,aAAcnG,EAAIE,OAAOC,MAAM4H,QAAQ,IAAK,kDAKhDtL,KAAKqD,SAAS,CACVC,SAAS,qCAIR,IAAAyE,EAAA/H,KACL,OACIgE,EAAAzF,EAAA0F,cAAA,WACKjE,KAAKI,MAAMkD,QAAWU,EAAAzF,EAAA0F,cAAC4H,EAAD,MAAe7H,EAAAzF,EAAA0F,cAAA,WAAKD,EAAAzF,EAAA0F,cAAC6H,EAAA,EAAD,CAAUC,OAAQ,SAAAhC,GAAI,OAAIhC,EAAKiE,aAAajC,KAClF,SAAApD,GAAA,IAAGsF,EAAHtF,EAAGsF,aAAcC,EAAjBvF,EAAiBuF,cAAjB,OACGlI,EAAAzF,EAAA0F,cAAA,eACID,EAAAzF,EAAA0F,cAAA,MAASgI,IACLjI,EAAAzF,EAAA0F,cAAA,QAAWiI,KACXlI,EAAAzF,EAAA0F,cAAA,uEAKXjE,KAAKI,MAAMkJ,UACRtF,EAAAzF,EAAA0F,cAAA,WACID,EAAAzF,EAAA0F,cAAA,OAAKC,UAAU,kBACXF,EAAAzF,EAAA0F,cAAA,UAAQC,UAAU,cAAciI,SAAU,SAAC5I,GAAD,OAASwE,EAAKqE,WAAW7I,KAC/DS,EAAAzF,EAAA0F,cAAA,UAAQP,MAAM,GAAG2I,UAAQ,EAACC,UAAQ,GAAlC,iBACCtM,KAAKI,MAAMqJ,QAGnBzJ,KAAKI,MAAMsJ,aAAajE,OAAS,EAAKzB,EAAAzF,EAAA0F,cAAA,UAAQsI,QAAS,SAAChJ,GAAD,OAASwE,EAAK4B,QAAQ5B,EAAK3H,MAAMsJ,aAAc3B,EAAK3H,MAAMoJ,aAA3E,WAA4GxF,EAAAzF,EAAA0F,cAAA,aAEtJD,EAAAzF,EAAA0F,cAAA,aAGTD,EAAAzF,EAAA0F,cAACuI,EAAD,CAAStF,UAAWlH,KAAKI,MAAMsJ,aAAczC,OAAQjH,KAAK8J,kBAAmBhD,OAAQ9G,KAAKI,MAAM0G,iBA7IzFzC,aCgBRoI,cAjBb,SAAAA,EAAY5M,GAAO,IAAAf,EAAA,OAAAgB,OAAAC,EAAA,EAAAD,CAAAE,KAAAyM,IACjB3N,EAAAgB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2M,GAAAtM,KAAAH,KAAMH,KACDO,MAAQ,GAFItB,wEASjB,OACEkF,EAAAzF,EAAA0F,cAAA,WACED,EAAAzF,EAAA0F,cAACyI,EAAD,cAZctG,IAAM/B,WC6BbsI,cA7Bb,SAAAA,EAAY9M,GAAO,IAAAf,EAAA,OAAAgB,OAAAC,EAAA,EAAAD,CAAAE,KAAA2M,IACjB7N,EAAAgB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6M,GAAAxM,KAAAH,KAAMH,KACDO,MAAQ,GAFItB,wEASjB,OACEkF,EAAAzF,EAAA0F,cAAA,WACED,EAAAzF,EAAA0F,cAAC2I,EAAA,EAAD,KACE5I,EAAAzF,EAAA0F,cAAA,OAAKC,UAAU,UACbF,EAAAzF,EAAA0F,cAAA,OAAKC,UAAU,kBACbF,EAAAzF,EAAA0F,cAAC2I,EAAA,EAAD,CAAS1I,UAAU,OAAO2I,GAAG,IAAIC,OAAK,GACpC9I,EAAAzF,EAAA0F,cAAA,0BAIND,EAAAzF,EAAA0F,cAAC8I,EAAA,EAAD,KACE/I,EAAAzF,EAAA0F,cAAC8I,EAAA,EAAD,CAAO9C,KAAK,IAAI6C,OAAK,EAACE,UAAWP,cArBpBrG,IAAM/B,WCShB4I,MARf,WACE,OACEjJ,EAAAzF,EAAA0F,cAAA,OAAKC,UAAU,OACbF,EAAAzF,EAAA0F,cAACiJ,EAAD,QCIcC,QACW,cAA7BtJ,OAAOuJ,SAASC,UAEe,UAA7BxJ,OAAOuJ,SAASC,UAEhBxJ,OAAOuJ,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACPxJ,EAAAzF,EAAA0F,cAACD,EAAAzF,EAAMkP,WAAP,KACEzJ,EAAAzF,EAAA0F,cAACyJ,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,KAAK,SAAAC,GACJA,EAAaC,eAEdC,MAAM,SAAAC,GACLxJ,QAAQwJ,MAAMA,EAAM5G,iHEzI5B,SAAA6G,EAAAC,GACA,IAAAC,EAAA,IAAAC,MAAA,uBAAAF,EAAA,KAEA,MADAC,EAAAE,KAAA,mBACAF,EAEAF,EAAA5C,KAAA,WAAuC,UACvC4C,EAAAK,QAAAL,EACAM,EAAAC,QAAAP,EACAA,EAAAQ,GAAA","file":"static/js/main.e9838f5d.chunk.js","sourcesContent":["/* eslint-disable no-throw-literal */\r\nconst URL = \"http://localhost:8080/jpareststarter\";\r\n\r\n\r\n\r\nclass ApiFacade {\r\n    //Insert utility-methods from a latter step (d) here\r\n    makeOptions(method, body) {\r\n        var opts = {\r\n            method: method,\r\n            headers: {\r\n                \"Content-type\": \"multipart/form-data\"\r\n            }\r\n        }   \r\n        if (body) {\r\n            opts.body = body;\r\n        }\r\n        return opts;\r\n    }\r\n\r\n    startAnalyzation = async (playername, data) => {\r\n        var formData = new FormData()\r\n        formData.append(\"data\",data)\r\n        const options = this.makeOptions(\"POST\",  formData);\r\n        const res = await fetch(\"api/analyze/upload/\"+playername, options)\r\n        const json = await res.json();\r\n        if (!res.ok) {\r\n            throw { status: res.status, fullError: json }\r\n        }\r\n        return json;\r\n    }\r\n}\r\n\r\nconst facade = new ApiFacade();\r\n\r\nexport default facade;\r\n","import React, { Component } from 'react';\r\nimport { Chart, Line} from 'react-chartjs-2';\r\n\r\n\r\n\r\nclass ChartInterface extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            division: this.props.division,\r\n            data: {\r\n                labels: this.props.Y,\r\n                datasets: [{\r\n                    label: this.props.chartname,\r\n                    data: this.props.X\r\n                }],\r\n            }\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        /* this.mounted = true\r\n        if (this.mounted){\r\n            Chart.pluginService.register({\r\n                afterDraw: function (chart, easing) {\r\n                    if (chart.tooltip._active && chart.tooltip._active.length) {\r\n                        const activePoint = chart.controller.tooltip._active[0];\r\n                        const ctx = chart.ctx;\r\n                        const x = activePoint.tooltipPosition().x;\r\n                        const y = activePoint.tooltipPosition().y;\r\n                        const bottomY = chart.scales['y-axis-0'].bottom;\r\n                        ctx.save();\r\n                        ctx.beginPath();\r\n                        ctx.moveTo(x, y);\r\n                        ctx.lineTo(x, bottomY);\r\n                        ctx.lineWidth = 0.5;\r\n                        ctx.strokeStyle = '#ACADBC';\r\n                        ctx.stroke();\r\n                        ctx.save();\r\n    \r\n    \r\n                    }\r\n                }\r\n            });\r\n            this.intervalID = setInterval(\r\n                () => this.update(),\r\n                60000\r\n            );\r\n         */\r\n        \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n\r\n    setInitialStartDate() {\r\n        let ts = new Date().getTime()\r\n        let start = new Date(ts)\r\n        start = start.setMonth(start.getMonth() - 1)\r\n        return start\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n\r\n    \r\n    convertTimestampToDatetime(timestamp) {\r\n        let time = parseInt(timestamp)\r\n        var d = new Date(time);\r\n        var h = this.addZero(d.getUTCHours());\r\n        var m = this.addZero(d.getUTCMinutes());\r\n        return d.getUTCDate() + '/' + (d.getUTCMonth() + 1) + '/' + d.getUTCFullYear() + \"-\" + h + \":\" + m + ' UTC';\r\n    }\r\n    addZero(i) {\r\n        if (i < 10) {\r\n            i = \"0\" + i;\r\n        }\r\n        return i;\r\n    }\r\n    \r\n    setChartData() {\r\n        let labels = this.state.label1\r\n        let data\r\n        labels = labels.sort()\r\n        if (this.state.showOrders) {\r\n            data = {\r\n                labels: labels.map(item => this.convertTimestampToDatetime(parseInt(item))),\r\n                datasets: [{\r\n                    type: 'bubble',\r\n                    label: 'BUYS',\r\n                    backgroundColor: 'green',\r\n                    data: this.state.buys\r\n                },\r\n                {\r\n                    type: 'bubble',\r\n                    label: 'SELLS',\r\n                    backgroundColor: 'red',\r\n                    data: this.state.sells\r\n\r\n                },\r\n                {\r\n                    label: this.props.cryptoName,\r\n                    fill: 'true',\r\n                    pointRadius: 0,\r\n                    borderColor: '#473BF0',\r\n                    borderWidth: 1,\r\n                    pointBackgroundColor: 'white',\r\n                    data: this.state.JSONdata.map(item => parseFloat(item[2]).toFixed(2))\r\n\r\n                }\r\n                ]\r\n            }\r\n\r\n        } else {\r\n            data = {\r\n                labels: labels.map(item => this.convertTimestampToDatetime(parseInt(item))),\r\n                datasets: [\r\n                    {\r\n                        label: this.props.cryptoName,\r\n                        fill: 'true',\r\n                        pointRadius: 0,\r\n                        borderColor: '#473BF0',\r\n                        borderWidth: 1,\r\n                        pointBackgroundColor: 'white',\r\n                        data: this.state.JSONdata.map(item => parseFloat(item[2]).toFixed(2))\r\n\r\n                    }\r\n                ]\r\n            }\r\n\r\n        }\r\n        this.setState({\r\n            data: data,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    changeInterval(evt) {\r\n        this.setState({\r\n            interval: evt.target.value\r\n        })\r\n        this.getChartData()\r\n    }\r\n\r\n    render() {\r\n        const windowWidth = window.innerWidth-20\r\n        const width = parseInt(windowWidth/this.state.division)\r\n        return (\r\n            <div className=\"chart-container\">\r\n\r\n \r\n                            <Line\r\n\r\n                                height={150}\r\n                                width={width}\r\n                                options={{\r\n                                }}\r\n                                data={this.state.data} />\r\n                        \r\n                </div>\r\n            \r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChartInterface;\r\n","import React, { Component } from 'react';\r\nimport { Chart, Line } from 'react-chartjs-2';\r\n\r\n\r\n\r\nclass TimelineChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            endOfCombat: this.props.data[1].data,\r\n            startOfCombat: this.props.data[0].data,\r\n\r\n            ic: [],\r\n            timeData: this.props.data,\r\n            data: {\r\n                labels: [0],\r\n                datasets: [{\r\n                    label: \"Timeline\",\r\n                    data: []\r\n                }],\r\n            }\r\n        }\r\n        this.createTimeline()\r\n\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.state.timeData)\r\n\r\n    }\r\n    getObjSize(obj) {\r\n        var size = 0, key;\r\n        for (key in obj) {\r\n            if (obj.hasOwnProperty(key)) size++;\r\n        }\r\n        return size;\r\n    }\r\n    createTimeline() {\r\n        let end = this.state.endOfCombat[this.getObjSize(this.state.endOfCombat) - 1]\r\n        this.setState({\r\n            data: {\r\n                labels: this.createTimeArray(end),\r\n                datasets: [{\r\n                    label: \"Timeline\",\r\n                    data: this.createTimeData(end)\r\n                }],\r\n            }\r\n        })\r\n    }\r\n\r\n    createTimeData(end) {\r\n        let ooc = this.state.endOfCombat\r\n        let ic = this.state.startOfCombat\r\n        let arr = []\r\n        var inCombat = false\r\n        for (var i = 0; i < end; i++) {\r\n            for (var j = 0; j < this.getObjSize(this.state.endOfCombat); i++) {\r\n                if (!inCombat) {\r\n                    if (i >= this.state.startOfCombat[j] && i < this.state.endOfCombat[j]) {\r\n                        inCombat = true\r\n                    }\r\n                    else inCombat = false\r\n                }\r\n            }\r\n            if (inCombat) {\r\n                // eslint-disable-next-line no-unused-expressions\r\n                arr.push[1]\r\n            }\r\n            // eslint-disable-next-line no-unused-expressions\r\n            else arr.push[0]\r\n        }\r\n        console.log(arr.length, arr)\r\n        return arr\r\n    }\r\n\r\n    createTimeArray(limit) {\r\n        let arr = []\r\n        for (var i = 0; i < limit; i++) {\r\n            arr.push(i)\r\n        }\r\n        return arr\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.state.ooc != nextProps.ooc) {\r\n            this.setState({\r\n                ooc: nextProps.ooc\r\n            })\r\n        }\r\n        if (this.state.ic != nextProps.ic) {\r\n            this.setState({\r\n                ic: nextProps.ic\r\n            })\r\n        }\r\n        if (this.state.timeData != nextProps.data) {\r\n            this.setState({\r\n                timeData: nextProps.data\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n\r\n    setInitialStartDate() {\r\n        let ts = new Date().getTime()\r\n        let start = new Date(ts)\r\n        start = start.setMonth(start.getMonth() - 1)\r\n        return start\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"chart-container\">\r\n\r\n\r\n                <Line\r\n\r\n                    height={80}\r\n                    width={window.innerWidth - 20}\r\n                    options={{\r\n                        scales: {\r\n                            yAxes: [{\r\n                                ticks: {\r\n                                    beginAtZero: true\r\n                                }\r\n                            }],\r\n                            xAxes: [{\r\n                                ticks: {\r\n                                    display: true\r\n                                }\r\n                            }]\r\n\r\n                        }\r\n                    }}\r\n                    data={this.state.data} />\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default TimelineChart;\r\n","import React from 'react';\r\nimport cettia from 'cettia-client';\r\nimport ChartInterface from './ChartInterface';\r\nimport TimelineChart from './TimelineChart';\r\n\r\n\r\nclass ROW extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>{this.props.obj.msg}</td>\r\n                <td>{this.props.obj.api}</td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nclass Contact extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            finish: this.props.finish,\r\n            stream: this.props.stream,\r\n            initiator: this.props.initiator\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.initiator != this.state.initiator) {\r\n            this.setState({\r\n                initiator: nextProps.initiator\r\n            })\r\n        }\r\n        if (nextProps.stream != this.state.stream) {\r\n            this.setState({\r\n                stream: nextProps.stream\r\n            })\r\n        }\r\n    }\r\n\r\n    addMessage = ({ sender, text }) => console.log(`${sender} sends ${text}`);\r\n\r\n    addRow = ({ sender, text }) => {\r\n        var obj = { sender: sender, text: JSON.parse(text) }\r\n        const { stream } = this.state;\r\n        console.log(obj.text)\r\n        var list = this.state.stream;\r\n        list.unshift(obj);\r\n        this.setState({ stream: list })\r\n        console.log(this.state.stream)\r\n        this.props.finish()\r\n    }\r\n\r\n    componentDidMount() {\r\n        let uri = `http://localhost:8080/jpareststarter/cettia?token=log`;\r\n        //let uri = 'http://161.35.221.47/bglogger/cettia?token=log';\r\n\r\n        this.socket = cettia.open(uri);\r\n        const addSystemMessage = text => this.addMessage({ sender: \"system\", text });\r\n        const addListMessage = message => this.addRow(message)\r\n        this.socket.on(\"message\", message => addListMessage(message));\r\n        this.socket.on(\"connecting\", () => addSystemMessage(\"The socket starts a connection.\"));\r\n        this.socket.on(\"open\", () => addSystemMessage(\"The socket establishes a connection.\"));\r\n        this.socket.on(\"close\", () => addSystemMessage(\"All transports failed to connect or the connection was disconnected.\"));\r\n        this.socket.on(\"waiting\", (delay) => addSystemMessage(`The socket will reconnect after ${delay} ms`));\r\n        this.socket.once(\"open\", () => setInterval(() => this.socket.send(\"message\", { text: `A message - ${Date.now()}` }), 5000));\r\n    }\r\n\r\n    createActionAnalysis(item) {\r\n        let data = item.data\r\n        let plots = item.plots\r\n        console.log(plots)\r\n        if (this.getObjSize(plots) > 0) {\r\n            return (<div>\r\n                <tr>\r\n                    {plots.map(plot => <td>{this.createPlot(plot, 3)}</td>)}\r\n                </tr>\r\n            </div>)\r\n        }\r\n    }\r\n\r\n    createDamageAnalysis(item) {\r\n        let data = item.data\r\n        let plots = item.plots\r\n        if (this.getObjSize(plots) > 0) {\r\n            return (<div>\r\n                <tr>\r\n                    {plots.map(plot => <td>{this.createPlot(plot, 4)}</td>)}\r\n                </tr>\r\n            </div>)\r\n        }\r\n    }\r\n    createDPSAnalysis(item) {\r\n        let data = item.data\r\n        let plots = item.plots\r\n        if (this.getObjSize(plots) > 0) {\r\n            return (<div>\r\n                <tr>\r\n                    {plots.map(plot => <td>{this.createPlot(plot, 2)}</td>)}\r\n                </tr>\r\n            </div>)\r\n        }\r\n    }\r\n    createDPSAnalysisTable(item) {\r\n        let data = item.data\r\n        let names = item.Name.toString().split(',')\r\n        return (\r\n            <td><tr><td>{names[0]}</td><td>{data[0]}</td></tr>\r\n                <tr><td>{names[1]}</td><td>{data[1]}</td></tr>\r\n                <tr><td>{names[2]}</td><td>{data[2]}</td></tr></td>\r\n        )\r\n    }\r\n\r\n\r\n    getObjSize(obj) {\r\n        var size = 0, key;\r\n        for (key in obj) {\r\n            if (obj.hasOwnProperty(key)) size++;\r\n        }\r\n        return size;\r\n    }\r\n\r\n    createDataline(column) {\r\n        column.map()\r\n\r\n    }\r\n\r\n    createPlot(plot, division) {\r\n        return <ChartInterface chartname={plot.Name} X={plot.Y} Y={plot.X} division={division} />\r\n    }\r\n\r\n    createTimeline(data) {\r\n        return <TimelineChart data={data} />\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <table className=\"tg\">\r\n                    <thead>\r\n                        <th>{this.state.initiator}</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.stream.map(item => {\r\n                           if (item.sender !== undefined && item.sender.toString().includes(\"Analysis.CombatTimeAnalysis\")) {\r\n                                console.log(item.text)\r\n                                /* return (\r\n                                    <div>\r\n                                        <tr><th>Combat Time Analysis</th></tr>\r\n                                        <tr><td>{this.createTimeline(item.text.data)}</td></tr>\r\n                                    </div>\r\n                                    //<tr><td>{item.data[0].Name}</td></tr>\r\n                                ) */\r\n                            }\r\n                        })}\r\n                        {this.state.stream.map(item => {\r\n                            if (item.sender !== undefined && item.sender.toString().includes(\"Analysis.ActionAnalysis\")) {\r\n                                console.log(item.text)\r\n                                return (\r\n                                    <div>\r\n                                        <tr><th>Action Analysis</th></tr>\r\n                                        <tr><td>{this.createActionAnalysis(item.text)}</td></tr>\r\n                                    </div>\r\n                                    //<tr><td>{item.data[0].Name}</td></tr>\r\n                                )\r\n                            }\r\n                        })}\r\n                        {this.state.stream.map(item => {\r\n                            if (item.sender !== undefined && item.sender.toString().includes(\"Analysis.DamageAnalysis\")) {\r\n                                console.log(item.text)\r\n                                return (\r\n                                    <div>\r\n                                        <tr><th>Damage Analysis</th></tr>\r\n                                        <tr><td>{this.createDamageAnalysis(item.text)}</td></tr>\r\n                                    </div>\r\n                                    //<tr><td>{item.data[0].Name}</td></tr>\r\n                                )\r\n                            }\r\n                        })}\r\n                        {this.state.stream.map(item => {\r\n                            if (item.sender !== undefined && item.sender.toString().includes(\"Analysis.CombatDpsAnalysis\")) {\r\n                                console.log(item.text.data)\r\n                                return (\r\n                                    <div>\r\n                                        <tr><th>DPS Analysis</th><th></th></tr>\r\n                                        <tr><td>{this.createDPSAnalysis(item.text)}</td><td>{this.createDPSAnalysisTable(item.text.data[0])}</td></tr>\r\n                                    </div>\r\n                                    //<tr><td>{item.data[0].Name}</td></tr>\r\n                                )\r\n                            }\r\n                        })}\r\n\r\n\r\n\r\n\r\n                    </tbody>\r\n\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\n\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader\"></div>\r\n    );\r\n}\r\n\r\nexport default Loader;","import React, { Component } from 'react'\r\nimport Dropzone from 'react-dropzone'\r\nimport facade from '../apiFacade'\r\nimport Contact from './Contact'\r\nimport Loader from './Loader'\r\n\r\n\r\nclass DropZone extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            validFile: false,\r\n            processed: false,\r\n            loading: false,\r\n            encodedData: '',\r\n            combatLog: [],\r\n            units: [],\r\n            selectedUnit: '',\r\n            stream: []\r\n\r\n        }\r\n        this.analyze = this.analyze.bind(this)\r\n        this.finishedAnalyzing = this.finishedAnalyzing.bind(this);\r\n    }\r\n\r\n    validateFile(file) {\r\n        const filename = file[0].path\r\n        console.log(file[0].path)\r\n        if (filename === 'WoWCombatLog.txt') {\r\n            this.setState({\r\n                processed: false,\r\n                validFile: filename === 'WoWCombatLog.txt'\r\n            })\r\n        }\r\n        else {\r\n            console.log('invalid file')\r\n        }\r\n        this.processFile(file[0])\r\n    }\r\n\r\n    async processFile(file) {\r\n        if (this.state.validFile) {\r\n\r\n            const reader = new FileReader()\r\n            reader.onload = async () => {\r\n                const binaryStr = reader.result\r\n                //const encodedData = base64.encode(binaryStr)\r\n                let combatLog = binaryStr.split('\\n')\r\n                var unitNames = this.getAllUnitsFromFile(binaryStr)\r\n                this.setState({\r\n                    //encodedData: encodedData,\r\n                    combatLog: combatLog,\r\n                    units: unitNames,\r\n                    processed: true\r\n                })\r\n                this.createUnitSelectItems()\r\n            }\r\n            reader.readAsText(file)\r\n        }\r\n    }\r\n\r\n    getAllUnitsFromFile(file) {\r\n\r\n        var units = []\r\n        var fileSplit = file.split('\\n')\r\n        for (var i = 1; i < fileSplit.length; i++) {\r\n            var lineSplit = fileSplit[i].split(',')\r\n            for (var j = 0; j < lineSplit.length; j++) {\r\n                if (lineSplit[j].includes('Player')) {\r\n                    if (lineSplit[j + 1].includes)\r\n                        units.push(lineSplit[j + 1])\r\n                }\r\n            }\r\n\r\n        }\r\n        return this.filter_list(this.removeDups(units))\r\n    }\r\n\r\n    filter_list(l) {\r\n        return l.filter(x => x.includes('-'));\r\n    }\r\n\r\n    createUnitSelectItems() {\r\n        let units = this.state.units.map(item => {\r\n            return (<option key={item.replace('\\\"', '')} value={item.replace('\\\"', '')}>{item.replace('\\\"', '').replace('\\\"', '')}</option>)\r\n        })\r\n        this.setState({\r\n            units: units\r\n        })\r\n    }\r\n\r\n    removeDups(names) {\r\n        let unique = {};\r\n        names.forEach(function (i) {\r\n            if (!unique[i]) {\r\n                unique[i] = true;\r\n            }\r\n        });\r\n        return Object.keys(unique);\r\n    }\r\n\r\n    async analyze(player, data) {\r\n        this.setState({\r\n            loading: true,\r\n            stream: []\r\n        })\r\n        await facade.startAnalyzation(player, JSON.parse(JSON.stringify(data)))\r\n    }\r\n\r\n    changeUnit(evt) {\r\n        evt.persist()\r\n        this.setState({\r\n            selectedUnit: evt.target.value.replace('\"', '')\r\n        })\r\n    }\r\n\r\n    finishedAnalyzing(){\r\n        this.setState({\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.loading ? (<Loader />) : (<div><Dropzone onDrop={file => this.validateFile(file)}>\r\n                    {({ getRootProps, getInputProps }) => (\r\n                        <section>\r\n                            <div {...getRootProps()}>\r\n                                <input {...getInputProps()} />\r\n                                <p>Drop your CombatLog.txt here, or click to browse files</p>\r\n                            </div>\r\n                        </section>\r\n                    )}\r\n                </Dropzone>\r\n                    {this.state.processed ? (\r\n                        <div>\r\n                            <div className=\"unit-container\">\r\n                                <select className=\"unit-select\" onChange={(evt) => this.changeUnit(evt)}>\r\n                                    <option value=\"\" disabled selected>Select player</option>\r\n                                    {this.state.units}\r\n                                </select>\r\n                            </div>\r\n                            {this.state.selectedUnit.length > 0 ? (<button onClick={(evt) => this.analyze(this.state.selectedUnit, this.state.combatLog)}>Analyze</button>) : (<div></div>)}\r\n                        </div>\r\n                    ) : (<div></div>)}\r\n                </div>)}\r\n\r\n                <Contact initiator={this.state.selectedUnit} finish={this.finishedAnalyzing} stream={this.state.stream}/>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default DropZone;","import React from 'react';\r\nimport DropZone from './DropZone'\r\n\r\n\r\n\r\nclass Analyze extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <DropZone />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Analyze;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, NavLink, Switch, Route } from 'react-router-dom';\r\nimport Analyze from './Components/Analyze';\r\n\r\nclass Navigation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div> \r\n        <Router>\r\n          <div className=\"Header\">\r\n            <div className=\"header-buttons\">\r\n              <NavLink className=\"link\" to=\"/\" exact>\r\n                <span>Analyze</span>\r\n              </NavLink>\r\n            </div>\r\n          </div>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Analyze} />\r\n          </Switch>\r\n        </Router>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Navigation from './Navigation';\r\nimport Contact from './Components/Contact';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navigation />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 474;"],"sourceRoot":""}