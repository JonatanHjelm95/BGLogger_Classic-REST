{"version":3,"sources":["../node_modules/cettia-client/node_modules/jsdom/lib/jsdom sync","apiFacade.js","Components/Stream.js","Components/DropZone.js","Components/Analyze.js","Navigation.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","URL","facade","startAnalyzation","_callee","playername","data","options","res","json","regenerator_default","a","wrap","_context","prev","next","_this","makeOptions","initiator","fetch","sent","ok","status","fullError","abrupt","stop","uploadLog","_callee2","_context2","method","body","stopAnalyzation","_callee3","_context3","opts","headers","Content-type","Accept","JSON","stringify","ROW","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","createElement","obj","msg","api","React","Component","Stream","addMessage","_ref","sender","text","console","log","concat","addRow","_ref2","list","state","stream","unshift","setState","nextProps","_this2","socket","cettia","open","addSystemMessage","on","message","addListMessage","delay","once","setInterval","send","Date","now","className","map","Stream_ROW","DropZone","validFile","processed","loading","analyzeInitiated","encodedData","combatLog","units","selectedUnit","selectedFile","formData","analyze","bind","assertThisInitialized","file","filename","path","FormData","append","processFile","reader","FileReader","onload","asyncToGenerator","mark","binaryStr","unitNames","result","split","getAllUnitsFromFile","createUnitSelectItems","readAsText","fileSplit","i","length","lineSplit","j","includes","push","filter_list","removeDups","l","filter","x","item","key","replace","value","names","unique","forEach","player","evt","persist","target","_this3","es","onDrop","validateFile","getRootProps","getInputProps","onChange","changeUnit","disabled","selected","onClick","Components_Stream","Analyze","Components_DropZone","Navigation","react_router_dom","to","exact","react_router","component","App","src_Navigation","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.e3d2470d.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 436;","/* eslint-disable no-throw-literal */\r\nconst URL = \"http://161.35.221.47/bglogger\";\r\n\r\n\r\n\r\nclass ApiFacade {\r\n    //Insert utility-methods from a latter step (d) here\r\n    makeOptions(method, body) {\r\n        var opts = {\r\n            method: method,\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                'Accept': 'application/json',\r\n            }\r\n        }   \r\n        if (body) {\r\n            opts.body = JSON.stringify(body);\r\n        }\r\n        return opts;\r\n    }\r\n\r\n    startAnalyzation = async (playername, data) => {\r\n        const options = this.makeOptions(\"POST\",  { initiator: playername, data: data});\r\n        const res = await fetch(URL+\"/api/analyze/postlog\", options)\r\n        const json = await res.json();\r\n        if (!res.ok) {\r\n            throw { status: res.status, fullError: json }\r\n        }\r\n        return json;\r\n    }\r\n\r\n    uploadLog = async (data) => {\r\n        const res = await fetch(URL+\"/api/analyze/upload\", {\r\n            method: 'POST',\r\n            body: data\r\n        })\r\n        const json = await res.json();\r\n        if (!res.ok) {\r\n            throw { status: res.status, fullError: json }\r\n        }\r\n        return json;\r\n    }\r\n\r\n    stopAnalyzation = async () => {\r\n        const options = this.makeOptions(\"POST\", true);\r\n        const res = await fetch(\"/api/backtest/stop\", options)\r\n        const json = await res.json();\r\n        if (!res.ok) {\r\n            throw { status: res.status, fullError: json }\r\n        }\r\n        return json;\r\n    }\r\n}\r\n\r\nconst facade = new ApiFacade();\r\n\r\nexport default facade;\r\n","import React from 'react';\r\nimport cettia from 'cettia-client';\r\n\r\n\r\nclass ROW extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>{this.props.obj.msg}</td>\r\n                <td>{this.props.obj.api}</td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nclass Stream extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            stream: [{\r\n                \r\n            }\r\n            ],\r\n            initiator: this.props.initiator\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.initiator != this.state.initiator) {\r\n            this.setState({\r\n                initiator: nextProps.initiator\r\n            })\r\n        }\r\n    }\r\n\r\n    addMessage = ({ sender, text }) => console.log(`${sender} sends ${text}`);\r\n\r\n    addRow = ({ sender, text }) => {\r\n        console.log(text)\r\n        var obj = {\r\n            \"msg\": text,\r\n            \"api\": sender\r\n        }\r\n        const { stream } = this.state;\r\n        var list = this.state.stream;\r\n        list.unshift(obj);\r\n\r\n        this.setState({ stream: list })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        //let uri = `http://localhost:8080/jpareststarter/cettia?token=log`;\r\n        let uri = 'http://161.35.221.47/bglogger/cettia?token=log';\r\n\r\n        this.socket = cettia.open(uri);\r\n        const addSystemMessage = text => this.addMessage({ sender: \"system\", text });\r\n        const addListMessage = message => this.addRow(message)\r\n        this.socket.on(\"message\", message => addListMessage(message));\r\n        this.socket.on(\"connecting\", () => addSystemMessage(\"The socket starts a connection.\"));\r\n        this.socket.on(\"open\", () => addSystemMessage(\"The socket establishes a connection.\"));\r\n        this.socket.on(\"close\", () => addSystemMessage(\"All transports failed to connect or the connection was disconnected.\"));\r\n        this.socket.on(\"waiting\", (delay) => addSystemMessage(`The socket will reconnect after ${delay} ms`));\r\n        this.socket.once(\"open\", () => setInterval(() => this.socket.send(\"message\", { text: `A message - ${Date.now()}` }), 5000));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>\r\n                    Results for {this.state.initiator}\r\n                </h1>\r\n                <table className=\"result-table\">\r\n                    <thead>\r\n                        <th>{this.state.initiator}</th>\r\n                        <th>API kaldt</th>\r\n                    </thead>\r\n                    {\r\n                        this.state.stream.map(res => {\r\n                            return (\r\n                                <ROW obj={res} />\r\n                            )\r\n                        }\r\n\r\n                        )\r\n                    }\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Stream;","import React, { Component } from 'react'\r\nimport Dropzone from 'react-dropzone'\r\nimport facade from '../apiFacade'\r\nimport Stream from './Stream'\r\n\r\n\r\nclass DropZone extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            validFile: false,\r\n            processed: false,\r\n            loading: false,\r\n            analyzeInitiated: false,\r\n            encodedData: '',\r\n            combatLog: [],\r\n            units: [],\r\n            selectedUnit: '',\r\n            selectedFile: '',\r\n            formData: null,\r\n        }\r\n        this.analyze = this.analyze.bind(this)\r\n    }\r\n\r\n    validateFile(file) {\r\n        const filename = file[0].path\r\n        console.log(file[0].path)\r\n        if (filename === 'WoWCombatLog.txt') {\r\n            const formData = new FormData()\r\n            this.setState({\r\n                processed: false,\r\n                validFile: filename === 'WoWCombatLog.txt',\r\n                selectedFile: file[0]\r\n            })\r\n            formData.append('file', this.state.selectedFile)\r\n            this.setState({\r\n                formData: formData\r\n            })\r\n            console.log(this.state.formData)\r\n        }\r\n        else {\r\n            console.log('invalid file')\r\n        }\r\n        this.processFile(file[0])\r\n    }\r\n\r\n    async processFile(file) {\r\n        if (this.state.validFile) {\r\n\r\n            const reader = new FileReader()\r\n            reader.onload = async () => {\r\n                const binaryStr = reader.result\r\n                //const encodedData = base64.encode(binaryStr)\r\n                let combatLog = binaryStr.split('\\n')\r\n                var unitNames = this.getAllUnitsFromFile(binaryStr)\r\n                this.setState({\r\n                    //encodedData: encodedData,\r\n                    combatLog: combatLog,\r\n                    units: unitNames,\r\n                    processed: true\r\n                })\r\n                console.log(this.state.combatLog)\r\n                this.createUnitSelectItems()\r\n            }\r\n            reader.readAsText(file)\r\n        }\r\n    }\r\n\r\n    getAllUnitsFromFile(file) {\r\n\r\n        var units = []\r\n        var fileSplit = file.split('\\n')\r\n        for (var i = 1; i < fileSplit.length; i++) {\r\n            var lineSplit = fileSplit[i].split(',')\r\n            for (var j = 0; j < lineSplit.length; j++) {\r\n                if (lineSplit[j].includes('Player')) {\r\n                    if (lineSplit[j + 1])\r\n                        units.push(lineSplit[j + 1])\r\n                }\r\n            }\r\n\r\n        }\r\n        return this.filter_list(this.removeDups(units))\r\n    }\r\n\r\n    filter_list(l) {\r\n        return l.filter(x => x.includes('-'));\r\n    }\r\n\r\n    createUnitSelectItems() {\r\n        let units = this.state.units.map(item => {\r\n            return (<option key={item.replace('\\\"', '')} value={item.replace('\\\"', '')}>{item.replace('\\\"', '').replace('\\\"', '')}</option>)\r\n        })\r\n        this.setState({\r\n            units: units\r\n        })\r\n    }\r\n\r\n    removeDups(names) {\r\n        let unique = {};\r\n        names.forEach(function (i) {\r\n            if (!unique[i]) {\r\n                unique[i] = true;\r\n            }\r\n        });\r\n        return Object.keys(unique);\r\n    }\r\n\r\n    async analyze(player, data) {\r\n        /* await facade.startAnalyzation(player, JSON.parse(JSON.stringify(data)))\r\n        this.setState({\r\n            analyzeInitiated: true\r\n        }) */\r\n        await facade.uploadLog(data)\r\n        //console.log(player)\r\n        //console.log(JSON.stringify(data))\r\n    }\r\n\r\n    changeUnit(evt) {\r\n        evt.persist()\r\n        this.setState({\r\n            selectedUnit: evt.target.value.replace('\"', '')\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Dropzone onDrop={file => this.validateFile(file)}>\r\n                    {({ getRootProps, getInputProps }) => (\r\n                        <section>\r\n                            <div {...getRootProps()}>\r\n                                <input {...getInputProps()} />\r\n                                <p>Drop your CombatLog.txt here, or click to browse files</p>\r\n                            </div>\r\n                        </section>\r\n                    )}\r\n                </Dropzone>\r\n                {this.state.processed ? (\r\n                    <div>\r\n                        <div className=\"unit-container\">\r\n                            <select className=\"unit-select\" onChange={(evt) => this.changeUnit(evt)}>\r\n                                <option value=\"\" disabled selected>Select player</option>\r\n                                {this.state.units}\r\n                            </select>\r\n                        </div>\r\n                        {this.state.selectedUnit.length > 0 ? (<button onClick={(evt) => this.analyze(this.state.selectedUnit, this.state.formData)}>Analyze</button>) : (<div></div>)}\r\n                        {this.state.analyzeInitiated ? (<Stream initiator={this.state.selectedUnit} />) : (<div></div>)}\r\n                    </div>\r\n                ) : (<div></div>)}\r\n\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default DropZone;\r\n","import React from 'react';\r\nimport DropZone from './DropZone'\r\n\r\n\r\n\r\nclass Analyze extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <DropZone />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Analyze;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, NavLink, Switch, Route } from 'react-router-dom';\r\nimport Analyze from './Components/Analyze';\r\n\r\nclass Navigation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div> \r\n        <Router>\r\n          <div className=\"Header\">\r\n            <div className=\"header-buttons\">\r\n              <NavLink className=\"link\" to=\"/\" exact>\r\n                <span>Analyze</span>\r\n              </NavLink>\r\n            </div>\r\n          </div>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Analyze} />\r\n          </Switch>\r\n        </Router>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Navigation from './Navigation';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navigation />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}