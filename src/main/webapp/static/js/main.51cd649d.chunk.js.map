{"version":3,"sources":["../node_modules/cettia-client/node_modules/jsdom/lib/jsdom sync","apiFacade.js","Components/Contact.js","Components/DropZone.js","Components/Analyze.js","Navigation.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","URL","facade","startAnalyzation","_callee","playername","data","options","res","json","regenerator_default","a","wrap","_context","prev","next","_this","makeOptions","initiator","fetch","sent","ok","status","fullError","abrupt","stop","stopAnalyzation","_callee2","_context2","method","body","opts","headers","Content-type","Accept","JSON","stringify","ROW","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","createElement","obj","msg","api","React","Component","Contact","addMessage","_ref","sender","text","console","log","concat","addRow","_ref2","state","stream","list","unshift","setState","_this2","socket","cettia","open","addSystemMessage","on","message","addListMessage","delay","once","setInterval","send","Date","now","className","map","Contact_ROW","DropZone","validFile","processed","loading","encodedData","units","selectedUnit","analyze","bind","assertThisInitialized","file","filename","path","processFile","reader","FileReader","onload","asyncToGenerator","mark","binaryStr","unitNames","result","base64","encode","getAllUnitsFromFile","createUnitSelectItems","readAsText","fileSplit","split","i","length","lineSplit","j","includes","push","filter_list","removeDups","l","filter","x","item","key","replace","value","names","unique","forEach","player","evt","persist","target","_this3","Components_Contact","es","onDrop","validateFile","getRootProps","getInputProps","onChange","changeUnit","disabled","selected","onClick","Analyze","Components_DropZone","Navigation","react_router_dom","to","exact","react_router","component","App","src_Navigation","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.51cd649d.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 437;","/* eslint-disable no-throw-literal */\r\nconst URL = \"http://161.35.221.47/bglogger\";\r\n\r\n\r\n\r\nclass ApiFacade {\r\n    //Insert utility-methods from a latter step (d) here\r\n    makeOptions(method, body) {\r\n        var opts = {\r\n            method: method,\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                'Accept': 'application/json',\r\n            }\r\n        }   \r\n        if (body) {\r\n            opts.body = JSON.stringify(body);\r\n        }\r\n        return opts;\r\n    }\r\n\r\n    startAnalyzation = async (playername, data) => {\r\n        const options = this.makeOptions(\"POST\",  { initiator: playername, data: data});\r\n        const res = await fetch(URL+\"/api/analyze/postlog\", options)\r\n        const json = await res.json();\r\n        if (!res.ok) {\r\n            throw { status: res.status, fullError: json }\r\n        }\r\n        return json;\r\n    }\r\n\r\n    stopAnalyzation = async () => {\r\n        const options = this.makeOptions(\"POST\", true);\r\n        const res = await fetch(\"/api/backtest/stop\", options)\r\n        const json = await res.json();\r\n        if (!res.ok) {\r\n            throw { status: res.status, fullError: json }\r\n        }\r\n        return json;\r\n    }\r\n}\r\n\r\nconst facade = new ApiFacade();\r\n\r\nexport default facade;\r\n","import React from 'react';\r\nimport cettia from 'cettia-client';\r\n\r\n\r\nclass ROW extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>{this.props.obj.msg}</td>\r\n                <td>{this.props.obj.api}</td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nclass Contact extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            stream: [{\r\n                \"msg\": \"velkommen\",\r\n                \"api\": \"Ingen\"\r\n            }\r\n            ]\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    addMessage = ({ sender, text }) => console.log(`${sender} sends ${text}`);\r\n\r\n    addRow = ({sender,text}) =>{\r\n        console.log(\"woo\")\r\n        var obj = {\r\n            \"msg\": text,\r\n            \"api\": sender\r\n        }\r\n        console.log(\"woo\")\r\n        const { stream } = this.state;\r\n\t\tvar list = this.state.stream;\r\n\t\tlist.unshift(obj);\r\n\r\n\t\tthis.setState({ stream: list})\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        //let uri = `http://localhost:8080/semproject/cettia?token=log`;\r\n        let uri = \"http://161.35.221.47/bglogger/cettia\";\r\n        this.socket = cettia.open(uri);\r\n        const addSystemMessage = text => this.addMessage({ sender: \"system\", text });\r\n        const addListMessage = message => this.addRow(message)\r\n        this.socket.on(\"message\", message => addListMessage(message));\r\n        this.socket.on(\"connecting\", () => addSystemMessage(\"The socket starts a connection.\"));\r\n        this.socket.on(\"open\", () => addSystemMessage(\"The socket establishes a connection.\"));\r\n        this.socket.on(\"close\", () => addSystemMessage(\"All transports failed to connect or the connection was disconnected.\"));\r\n        this.socket.on(\"waiting\", (delay) => addSystemMessage(`The socket will reconnect after ${delay} ms`));\r\n        this.socket.once(\"open\", () => setInterval(() => this.socket.send(\"message\", {text: `A message - ${Date.now()}`}), 5000));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>\r\n                    Dette er en liste der hele tiden modtager hvad det seneste kald til API'en er.\r\n                </h1>\r\n                <table className=\"tg\">\r\n                    <thead>\r\n                        <th>Besked</th>\r\n                        <th>API kaldt</th>\r\n                    </thead>\r\n                    {\r\n                        this.state.stream.map(res => {\r\n                            return (\r\n                                <ROW obj={res} />\r\n                            )\r\n                        }\r\n\r\n                        )\r\n                    }\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport Dropzone from 'react-dropzone'\r\nimport base64 from 'react-native-base64'\r\nimport facade from '../apiFacade'\r\nimport Contact from './Contact'\r\n\r\n\r\nclass DropZone extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            validFile: false,\r\n            processed: false,\r\n            loading: false,\r\n            encodedData: '',\r\n            units: [],\r\n            selectedUnit: '',\r\n        }\r\n        this.analyze = this.analyze.bind(this)\r\n    }\r\n\r\n    validateFile(file) {\r\n        const filename = file[0].path\r\n        console.log(file[0].path)\r\n        if (filename === 'WoWCombatLog.txt') {\r\n            this.setState({\r\n                processed: false,\r\n                validFile: filename === 'WoWCombatLog.txt'\r\n            })\r\n        }\r\n        else {\r\n            console.log('invalid file')\r\n        }\r\n        this.processFile(file[0])\r\n    }\r\n\r\n    async processFile(file) {\r\n        if (this.state.validFile) {\r\n\r\n            const reader = new FileReader()\r\n            reader.onload = async () => {\r\n                const binaryStr = reader.result\r\n                const encodedData = base64.encode(binaryStr)\r\n                var unitNames = this.getAllUnitsFromFile(binaryStr)\r\n                this.setState({\r\n                    encodedData: encodedData,\r\n                    units: unitNames,\r\n                    processed: true\r\n                })\r\n                this.createUnitSelectItems()\r\n            }\r\n            reader.readAsText(file)\r\n        }\r\n    }\r\n\r\n    getAllUnitsFromFile(file) {\r\n\r\n        var units = []\r\n        var fileSplit = file.split('\\n')\r\n        for (var i = 1; i < fileSplit.length; i++) {\r\n            var lineSplit = fileSplit[i].split(',')\r\n            for (var j = 0; j < lineSplit.length; j++) {\r\n                if (lineSplit[j].includes('Player')) {\r\n                    if (lineSplit[j + 1].includes)\r\n                        units.push(lineSplit[j + 1])\r\n                }\r\n            }\r\n\r\n        }\r\n        return this.filter_list(this.removeDups(units))\r\n    }\r\n\r\n    filter_list(l) {\r\n        return l.filter(x => x.includes('-'));\r\n    }\r\n\r\n    createUnitSelectItems() {\r\n        let units = this.state.units.map(item => {\r\n            return (<option key={item.replace('\\\"', '')} value={item.replace('\\\"', '')}>{item.replace('\\\"', '').replace('\\\"', '')}</option>)\r\n        })\r\n        this.setState({\r\n            units: units\r\n        })\r\n    }\r\n\r\n    removeDups(names) {\r\n        let unique = {};\r\n        names.forEach(function (i) {\r\n            if (!unique[i]) {\r\n                unique[i] = true;\r\n            }\r\n        });\r\n        return Object.keys(unique);\r\n    }\r\n\r\n    async analyze(player, data) {\r\n        var res = await facade.startAnalyzation(player, data)\r\n        console.log(res)\r\n    }\r\n\r\n    changeUnit(evt) {\r\n        evt.persist()\r\n        this.setState({\r\n            selectedUnit: evt.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Contact />\r\n                <Dropzone onDrop={file => this.validateFile(file)}>\r\n                    {({ getRootProps, getInputProps }) => (\r\n                        <section>\r\n                            <div {...getRootProps()}>\r\n                                <input {...getInputProps()} />\r\n                                <p>Drag 'n' drop your CombatLog.txt here, or click to browse file</p>\r\n                            </div>\r\n                        </section>\r\n                    )}\r\n                </Dropzone>\r\n                {this.state.processed ? (\r\n                    <div>\r\n                        <div className=\"unit-container\">\r\n                            <select className=\"unit-select\" onChange={(evt) => this.changeUnit(evt)}>\r\n                                <option value=\"\" disabled selected>Select player</option>\r\n                                {this.state.units}\r\n                            </select>\r\n                        </div>\r\n                        {this.state.selectedUnit.length > 0 ? (<button onClick={(evt) => this.analyze(this.state.selectedUnit, this.state.encodedData)}>Analyze</button>) : (<div></div>)}\r\n                    </div>\r\n                ) : (<div></div>)}\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default DropZone;","import React from 'react';\r\nimport DropZone from './DropZone'\r\n\r\n\r\n\r\nclass Analyze extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <DropZone />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Analyze;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, NavLink, Switch, Route } from 'react-router-dom';\r\nimport Analyze from './Components/Analyze';\r\n\r\nclass Navigation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div> \r\n        <Router>\r\n          <div className=\"Header\">\r\n            <div className=\"header-buttons\">\r\n              <NavLink className=\"link\" to=\"/\" exact>\r\n                <span>Analyze</span>\r\n              </NavLink>\r\n            </div>\r\n          </div>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Analyze} />\r\n          </Switch>\r\n        </Router>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Navigation from './Navigation';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navigation />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}